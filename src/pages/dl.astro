---
import MainLayout from "../layouts/MainLayout.astro";
import Tabel from "../components/Tabel.astro";
import FormLayout from "../layouts/FormLayout.astro";
import ButtonGroup from "../components/ButtonGroup.astro";
import Heading from "../components/Heading.astro";
import { LICENSE_FIELDS } from "../utils/constant";

const inlineStyle = `
   background-color: rgb(215, 250, 216);
`;

const buttonList = [
  { name: "reset", class: "reset__button", type: "button" },
  { name: "save", class: "save__button", type: "submit" },
];
const headerList = ["Document", "Info", "Name", "Gender", "DOB", "Actions"];
---

<MainLayout>
  <Heading
    headingText="Please enter the details in the below form"
    subheadingText="all fields are required"
  />
  <section>
    <FormLayout
      formId="licenseForm"
      formName="licenseForm"
      fields={LICENSE_FIELDS}
    />
    <ButtonGroup group={buttonList} />
  </section>
  <Tabel list={headerList} />
  <div id="canvasContainer" class="canvas" style="display: none;">
    <canvas id="dlCanvas"></canvas>
    <button id="downloadButton" class="download" style="display: none;"
      >Download Image</button
    >
  </div>
</MainLayout>

<script is:inline type="module">
  import { generateImage } from "/scripts/image.js";
  import {
    handleSubmit as formHandleSubmit,
    resetForm as resetform,
    populateForm as populateForm,
    generateImageData as generateImageData,
  } from "/scripts/formHandlers.js";

  const dlForm = document.getElementById("licenseForm");
  const saveButton = document.querySelector(".save__button");
  const resetButton = document.querySelector(".reset__button");
  const container = document.querySelector(".container");
  const canvas = document.getElementById("dlCanvas");
  const context = canvas ? canvas.getContext("2d") : null;
  let currentEditItem = null;

  if (!context) {
    console.error("Canvas context could not be obtained.");
  } else {
    const handleSubmit = (event) => {
      formHandleSubmit(event, dlForm, currentEditItem, container, {
        type: "License",
        additionalFields: ["DOE"],
      });
      currentEditItem = null;
    };
    const resetForm = () => {
      resetform(dlForm);
      currentEditItem = null;
    };
    const editItem = (event) => {
      const item = event.target.closest(".item");

      const data = {
        documentNumber: item.dataset.documentNumber,
        holdingPersonName: item.dataset.holdingPersonName,
        gender: item.dataset.gender,
        DOB: item.dataset.dob,
      };
      const additionalFields = {
        DOE_dl: item.dataset.doe,
      };
      populateForm(dlForm, data, additionalFields);
      currentEditItem = item;
    };

    const viewItem = (event) => {
      const item = event.target.closest(".item");

      const dlDetail = {
        number: item.dataset.documentNumber,
        name: item.dataset.holdingPersonName,
        gender: item.dataset.gender === "male" ? "♂" : "♀",
        dob: item.dataset.dob,
        doe: item.dataset.doe,
      };

      const data = generateImageData("dl", dlDetail);

      generateImage({
        title: "--License--",
        data,
        canvas: document.getElementById("dlCanvas"),
        canvasContainer: document.getElementById("canvasContainer"),
        downloadButton: document.getElementById("downloadButton"),
        backgroundColor: "#b5fdeb",
        borderColor: "#808000",
      });
    };

    resetButton.addEventListener("click", resetForm);
    saveButton.addEventListener("click", handleSubmit);
    container.addEventListener("click", (event) => {
      if (event.target.classList.contains("delete__btn")) {
        deleteItem(event);
      } else if (event.target.classList.contains("edit__btn")) {
        editItem(event);
      } else if (event.target.classList.contains("view__btn")) {
        viewItem(event);
      }
    });
  }
</script>
