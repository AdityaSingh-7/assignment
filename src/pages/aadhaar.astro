---
import MainLayout from "../layouts/MainLayout.astro";
import Heading from "../components/Heading.astro";
import Tabel from "../components/Tabel.astro";
import ButtonGroup from "../components/ButtonGroup.astro";
import FormLayout from "../layouts/FormLayout.astro";
import { AADHAAR_FIELDS } from "../utils/constant";

const buttonList = [
  { name: "reset", class: "reset__button", type: "button" },
  { name: "save", class: "save__button", type: "submit" },
];
const headerList = ["Document", "Info", "Name", "Gender", "DOB", "Actions"];
---

<MainLayout>
  <Heading
    headingText="Please enter the details in the below form"
    subheadingText="all fields are required"
  />
  <section>
    <FormLayout
      formId="aadhaarForm"
      formName="aadhaarForm"
      fields={AADHAAR_FIELDS}
    />
    <ButtonGroup group={buttonList} />
  </section>
  <Tabel list={headerList} />
  <div id="canvasContainer" class="canvas hide">
    <canvas id="aadhaarCanvas"></canvas>
    <button id="downloadButton" class="download hide">Download Image</button>
  </div>
</MainLayout>

<script is:inline type="module">
  import { generateImage } from "/scripts/image.js";
  import {
    formatDate,
    convertToDateInputFormat,
    deleteItem,
    handleSubmit as formHandleSubmit,
    resetForm as resetform,
    generateImageData as generateImageData,
  } from "/scripts/formHandlers.js";

  const aadhaarForm = document.getElementById("aadhaarForm");
  const saveButton = document.querySelector(".save__button");
  const resetButton = document.querySelector(".reset__button");
  const container = document.querySelector(".container");
  const canvas = document.getElementById("aadhaarCanvas");
  const context = canvas ? canvas.getContext("2d") : null;
  let currentEditItem = null;

  if (!context) {
    console.error("Canvas context could not be obtained.");
  } else {
    console.log("Canvas context obtained successfully.");

    const handleSubmit = async (event) => {
      event.preventDefault();
      console.log("Handling form submit");
      const formData = new FormData(aadhaarForm);
      const documentNumber = formData.get("documentNumber")?.trim();
      const holdingPersonName = formData.get("holdingPersonName")?.trim();
      const DOB = formData.get("DOB")?.trim();
      const gender = formData.get("gender")?.trim();
      const address = formData.get("address")?.trim();

      console.log("Form Data:", {
        documentNumber,
        holdingPersonName,
        DOB,
        gender,
        address,
      });

      const formObject = {
        documentNumber,
        holdingPersonName,
        DOB,
        gender,
        address,
      };
      console.log(formObject);
      try {
        const response = await fetch("http://localhost:3000/api/save", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify(formObject),
        });

        if (response.ok) {
          console.log("Data saved successfully!");

          // Add this newly saved entry to the table (for immediate reflection)
          formHandleSubmit(event, aadhaarForm, currentEditItem, container, {
            type: "Aadhaar",
            additionalFields: ["address"],
          });
        } else {
          console.error("Failed to save data.");
        }
      } catch (error) {
        console.error("Error saving data:", error);
      }

      currentEditItem = null;
    };

    // Load entries from server when the page loads

    const resetForm = () => {
      resetform(aadhaarForm);
      currentEditItem = null;
      console.log("Form reset.");
    };

    const editItem = (event) => {
      const item = event.target.closest(".item");
      const documentNumber = item.dataset.documentNumber;
      const holdingPersonName = item.dataset.holdingPersonName;
      const gender = item.dataset.gender;
      const DOB = item.dataset.dob;
      const address = item.dataset.address;

      aadhaarForm.querySelector("#doc-number").value = documentNumber;
      aadhaarForm.querySelector("#doc-name").value = holdingPersonName;
      aadhaarForm.querySelector("#doc-dob").value =
        convertToDateInputFormat(DOB);
      aadhaarForm.querySelector(`#gender_${gender}`).checked = true;
      aadhaarForm.querySelector("#doc-address").value = address;
      currentEditItem = item;
    };

    const viewItem = (event) => {
      const item = event.target.closest(".item");
      console.log("Viewing item:", item);

      const aadhaarDetail = {
        number: item.dataset.documentNumber,
        name: item.dataset.holdingPersonName,
        gender: item.dataset.gender === "male" ? "♂" : "♀",
        dob: item.dataset.dob,
        address: item.dataset.address,
      };

      const data = generateImageData("aadhaar", aadhaarDetail);

      generateImage({
        title: "--Aadhaar--",
        data,
        canvas,
        canvasContainer: document.getElementById("canvasContainer"),
        downloadButton: document.getElementById("downloadButton"),
        backgroundColor: "#D8BFD8",
        borderColor: "#FFC0CB",
      });
    };

    // Add Event Listeners
    resetButton.addEventListener("click", resetForm);
    saveButton.addEventListener("click", handleSubmit);
    container.addEventListener("click", (event) => {
      if (event.target.classList.contains("delete__btn")) {
        deleteItem(event);
      } else if (event.target.classList.contains("edit__btn")) {
        editItem(event);
      } else if (event.target.classList.contains("view__btn")) {
        viewItem(event);
      }
    });

    console.log("Event listeners added.");
  }
</script>
